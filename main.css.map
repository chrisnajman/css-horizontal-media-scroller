{"version":3,"file":"main.css","mappings":"AAIA,qBAGI,oDAIJ,2CAUI,aAGJ,YACI,yBACA,YACA,qBAKJ,4BAEI,gBAIJ,mBACI,uBADJ,kBACI,uBAIJ,KACI,iBACA,6BACA,gBACA,SAGA,kBAIJ,eACI,+DAIJ,YAEI,eACA,YACA,cAIJ,6BAII,aAIJ,uCACI,mBACI,qBADJ,kBACI,qBAGJ,qBAGI,gFACA,sFACA,kFACA,gCACA,yECpFR,WACI,mBACA,kBACA,gBACA,kBACA,uFACA,yJAIJ,MACI,qBCeI,yBDXJ,MACI,yBCUA,0BDLJ,MACI,yBAGR,qBAGI,mBCFI,0BDDR,qBAKQ,sBAIR,QCiFI,2BD7EJ,KACI,gBAGJ,KACI,wBEtCI,CFuCJ,aEpCI,CFqCJ,2CE/CO,CFgDP,6CACA,gBCrBI,0BDgBR,KAQQ,qBAIR,0CAYI,6CEnEU,CFoEV,eElEe,CFmEf,gBAGJ,OAEI,iBACA,eChDI,yBD6CR,OAMQ,iBACA,gBCpDA,0BD6CR,OAUQ,gBAIR,OAEI,mBACA,gBC9DI,yBD2DR,OAKQ,kBAIR,OAEI,mBACA,iBCvEI,yBDoER,OAKQ,qBAIR,OAEI,iBACA,cChFI,yBD6ER,OAKQ,mBAIR,WAII,eAGJ,IACI,SAGJ,QACI,gBAGJ,EACI,6CEjIU,CFkIV,qBACA,eElIe,CFmIf,aEvHc,CFyHd,WACI,qBAGJ,QACI,aElIA,CFoIJ,MACI,cACA,iBACA,iBACA,iCAIR,WACI,yBACA,SC5HI,yBD0HR,WAKQ,0BC/HA,0BD0HR,WASQ,UACA,mBAUR,yCACI,cG1KJ,mBF2FI,WACA,gBACA,UAEA,kBAEA,2BACA,8BACA,kDAEA,mBE5FJ,0CAEI,WACA,gBACA,UAEA,kBAEA,2BACA,8BACA,kDAEA,mBCpBJ,oBACI,WAEA,0BACI,wBFEG,CEDH,eAEJ,0BACI,wBFEG,iCECH,wBFJE,CEMN,oDAEI,oBAMR,uCACI,EACI,iCCvBJ,gBACI,gBACA,cACA,gBACA,aACA,2CACA,sBACA,sBACA,gBACA,mCAEA,sBACI,mBACA,kBAIR,eACI,aACA,sEACA,2CAEA,2BACI,WACA,kBACA,qCAGJ,iBACI,kBAKZ,cACI,wEAEA,gBACI,wBCvCR,SACI,yBACA,oBACA,gBLuDA,mCA/BI,0BK3BR,SAQQ,qBCPJ,aACI,cAIJ,YACI,SAGJ,UACI,gCACA,oBNeA,0BMjBJ,UAIQ,oBACA,iCCfZ,aACI,oBACA,sBACA,6BPwBI,0BO3BR,aAMQ,6BACA,uBCNR,0FACI,8CASI,uBACA,4CR8CJ,mCQ3CA,wBR2CA,mCQrCA,GACI,qDACA,0HACA,kERGA,yBQDJ,WAEQ,gBRDJ,0BQDJ,WAMQ,iB","sources":["webpack://site-template/./src/sass/reset/_reset.scss","webpack://site-template/./src/sass/base/_base.scss","webpack://site-template/./src/sass/abstracts/_mixins.scss","webpack://site-template/./src/sass/abstracts/_variables.scss","webpack://site-template/./src/sass/base/_utilities.scss","webpack://site-template/./src/sass/components/_scrollbars.scss","webpack://site-template/./src/sass/components/_horizontal-media-scroller.scss","webpack://site-template/./src/sass/layout/_article.scss","webpack://site-template/./src/sass/layout/_header.scss","webpack://site-template/./src/sass/layout/_footer.scss","webpack://site-template/./src/sass/layout/_fit-content.scss"],"sourcesContent":["/* \r\n *   Source: https://piccalil.li/blog/a-modern-css-reset/ \r\n*/\r\n/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n    box-sizing: border-box;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure,\r\nblockquote,\r\ndl,\r\ndd {\r\n    margin-top: 0;\r\n}\r\n\r\nabbr[title] {\r\n    border-bottom: dotted 1px;\r\n    cursor: help;\r\n    text-decoration: none;\r\n}\r\n\r\n/* Remove list styles on ul, ol elements with a list role, which suggests \r\ndefault styling will be removed */\r\nul[role=\"list\"],\r\nol[role=\"list\"] {\r\n    list-style: none;\r\n}\r\n\r\n/* Set core root defaults */\r\nhtml:focus-within {\r\n    scroll-behavior: smooth;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n    min-height: 100vh;\r\n    text-rendering: optimizeSpeed;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n\r\n    /* Always have a vertical scroll bar */\r\n    overflow-y: scroll;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n    text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg,\r\npicture {\r\n    max-width: 100%;\r\n    height: auto;\r\n    display: block;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n    font: inherit;\r\n}\r\n\r\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n    html:focus-within {\r\n        scroll-behavior: auto;\r\n    }\r\n\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        animation-duration: 0.01ms !important;\r\n        animation-iteration-count: 1 !important;\r\n        transition-duration: 0.01ms !important;\r\n        scroll-behavior: auto !important;\r\n        transition-delay: 0ms !important;\r\n    }\r\n}\r\n","@use \"../abstracts\" as ab;\r\n\r\n/* latin-ext */\r\n@font-face {\r\n    font-family: \"Lato\";\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-display: swap;\r\n    src: url(https://fonts.gstatic.com/s/lato/v20/S6uyw4BMUTPHjx4wXg.woff2) format(\"woff2\");\r\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC,\r\n        U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\r\n}\r\n\r\n:root {\r\n    --fontSizeBody: 1rem;\r\n}\r\n\r\n@include ab.respond-to(small) {\r\n    :root {\r\n        --fontSizeBody: 1.15rem;\r\n    }\r\n}\r\n\r\n@include ab.respond-to(large) {\r\n    :root {\r\n        --fontSizeBody: 1.25rem;\r\n    }\r\n}\r\n*,\r\n*::before,\r\n*::after {\r\n    margin-bottom: 1rem;\r\n    @include ab.respond-to(x-large) {\r\n        margin-bottom: 1.5rem;\r\n    }\r\n}\r\n\r\n*:focus {\r\n    @include ab.focus;\r\n}\r\n\r\nhtml {\r\n    margin-bottom: 0;\r\n}\r\n\r\nbody {\r\n    background-color: ab.$bodybg;\r\n    color: ab.$text;\r\n    font-family: ab.$fontText;\r\n    font-size: var(--fontSizeBody);\r\n    line-height: 1.5;\r\n\r\n    @include ab.respond-to(x-large) {\r\n        line-height: 1.75rem;\r\n    }\r\n}\r\n\r\nh1,\r\n.h1,\r\nh2,\r\n.h2,\r\nh3,\r\n.h3,\r\nh4,\r\n.h4,\r\nh5,\r\n.h5,\r\nh6,\r\n.h6 {\r\n    font-family: ab.$fontSpecial;\r\n    font-weight: ab.$headerFontWeight;\r\n    line-height: 1.1;\r\n}\r\n\r\nh1,\r\n.h1 {\r\n    padding-top: 3rem;\r\n    font-size: calc(200%);\r\n\r\n    @include ab.respond-to(small) {\r\n        padding-top: 2rem;\r\n        font-size: calc(250%);\r\n    }\r\n    @include ab.respond-to(large) {\r\n        font-size: calc(300%);\r\n    }\r\n}\r\n\r\nh2,\r\n.h2 {\r\n    padding-top: 1.5rem;\r\n    font-size: 1.5em;\r\n    @include ab.respond-to(small) {\r\n        padding-top: 2rem;\r\n    }\r\n}\r\n\r\nh3,\r\n.h3 {\r\n    padding-top: 1.3rem;\r\n    font-size: 1.17em;\r\n    @include ab.respond-to(small) {\r\n        padding-top: 1.75rem;\r\n    }\r\n}\r\n\r\nh4,\r\n.h4 {\r\n    padding-top: 1rem;\r\n    font-size: 1em;\r\n    @include ab.respond-to(small) {\r\n        padding-top: 1.5em;\r\n    }\r\n}\r\n\r\ndl,\r\nul,\r\nol,\r\np {\r\n    max-width: 60ch;\r\n}\r\n\r\nimg {\r\n    margin: 0;\r\n    // @include ab.marginCentre;\r\n}\r\npicture {\r\n    margin-bottom: 0;\r\n}\r\n\r\na {\r\n    font-family: ab.$fontSpecial;\r\n    text-decoration: none;\r\n    font-weight: ab.$strongFontWeight;\r\n    color: ab.$link;\r\n\r\n    &.url-text {\r\n        word-break: break-all;\r\n    }\r\n\r\n    &:hover {\r\n        color: ab.$linkHover;\r\n    }\r\n    &.ref {\r\n        display: block;\r\n        padding-top: 1rem;\r\n        text-align: right;\r\n        border-bottom: 1px dotted ab.$link;\r\n    }\r\n}\r\n\r\n.container {\r\n    padding: 0 1rem 1rem 1rem;\r\n    margin: 0;\r\n\r\n    @include ab.respond-to(x-small) {\r\n        padding: 2rem 0 1rem 1rem;\r\n    }\r\n\r\n    @include ab.respond-to(large) {\r\n        padding: 0;\r\n        padding-left: 2rem;\r\n    }\r\n}\r\n\r\n/* Tab and focus on scrollable regions */\r\n\r\n// E.g\r\n// <div role=\"region\" aria-labelledby=\"imageLarge\" tabindex=\"0\">\r\n//   <picture id=\"imageLarge\"> ... </picture>\r\n// </div>\r\n[role=\"region\"][aria-labelledby][tabindex] {\r\n    overflow: auto;\r\n}\r\n\r\n// Could be useful for border-bottom\r\n// .section-level-1 {\r\n//     @include ab.sectionSeparate;\r\n//     padding: 2rem 0;\r\n// }\r\n","@use \"../abstracts/variables\" as ab;\r\n\r\n/* Responsive breakpoint manager */\r\n$breakpoints: (\r\n    \"xx-small\": (\r\n        max-width: 739px,\r\n    ),\r\n    \"x-small\": (\r\n        min-width: 740px,\r\n    ),\r\n    \"small\": (\r\n        min-width: 960px,\r\n    ),\r\n    \"medium\": (\r\n        min-width: 1024px,\r\n    ),\r\n    \"large\": (\r\n        min-width: 1280px,\r\n    ),\r\n    \"x-large\": (\r\n        min-width: 1400px,\r\n    ),\r\n);\r\n@mixin respond-to($breakpoint) {\r\n    $raw-query: map-get($breakpoints, $breakpoint);\r\n\r\n    @if $raw-query {\r\n        $query: if(type-of($raw-query) == \"string\", unquote($raw-query), inspect($raw-query));\r\n\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n    } @else {\r\n        @error 'No value found for `#{$breakpoint}`. '\r\n         + 'Please make sure it is defined in `$breakpoints` map.';\r\n    }\r\n}\r\n\r\n// Usage:\r\n// @include ab.respond-to(small) {\r\n//     rules ....\r\n// }\r\n\r\n// **************************************************** //\r\n\r\n// Retina Emulator for testing only\r\n@mixin retinaEmulator($percent, $scale) {\r\n    zoom: $percent;\r\n    -moz-transform: scale($scale);\r\n    -moz-transform-origin: 0 0;\r\n}\r\n\r\n// Usage:\r\n\r\n//   E.g. for 2x images, place following in body { ... }:\r\n//   @include ab.retinaEmulator(200%, 2);\r\n\r\n// **************************************************** //\r\n\r\n@mixin marginCentre {\r\n    margin-inline: auto;\r\n}\r\n\r\n// **************************************************** //\r\n\r\n@mixin constrain($width, $maxwidth) {\r\n    width: $width;\r\n    max-width: $maxwidth;\r\n}\r\n\r\n// **************************************************** //\r\n\r\n@mixin arrowDown($color, $rightleftwidth) {\r\n    border-top: calc(1.5 * #{$rightleftwidth}) solid $color;\r\n    border-right: $rightleftwidth solid transparent;\r\n    border-bottom: none;\r\n    border-left: $rightleftwidth solid transparent;\r\n}\r\n// Usage: @include ab.arrowDown(ab.$sitebluedark, 10px);\r\n\r\n@mixin arrowUp($color, $rightleftwidth) {\r\n    border-top: none;\r\n    border-right: $rightleftwidth solid transparent;\r\n    border-bottom: calc(1.5 * #{$rightleftwidth}) solid $color;\r\n    border-left: $rightleftwidth solid transparent;\r\n}\r\n// Usage:  @include ab.arrowUp(ab.$white, 10px);\r\n\r\n// **************************************************** //\r\n\r\n// Hide but screenreader can see it\r\n@mixin screenReaderHide {\r\n    // Contain text within 1px box\r\n    height: 1px;\r\n    overflow: hidden;\r\n    width: 1px;\r\n    // Keep the layout */\r\n    position: absolute;\r\n    // Remove any visible trace (e.g. background color)\r\n    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    clip-path: inset(50%); // browsers in the future\r\n    // Prevent the screen reader from skipping spaces between words\r\n    white-space: nowrap;\r\n}\r\n\r\n// Unhide screenReaderHide so everyone can see it\r\n@mixin screenReaderShow {\r\n    clip: auto;\r\n    clip-path: none;\r\n    width: auto; // This might cause a problem\r\n    height: auto;\r\n    overflow: visible;\r\n    position: static;\r\n    white-space: normal;\r\n}\r\n\r\n@mixin focus {\r\n    outline: 2px dotted ab.$focusHighlight;\r\n}\r\n\r\n// **************************************************** //\r\n@mixin button {\r\n    padding: 0.5rem;\r\n    background-color: white;\r\n    color: ab.$link;\r\n    border: 2px solid ab.$glossaryBtnBorder;\r\n    border-top-width: 0;\r\n    border-right-width: 0;\r\n    border-radius: 0 0 0 0.5rem;\r\n    margin: 0;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    font-family: ab.$fontSpecial;\r\n    font-weight: ab.$strongFontWeight;\r\n    &:hover {\r\n        color: ab.$text;\r\n    }\r\n    span {\r\n        margin: 0;\r\n    }\r\n\r\n    .openClose {\r\n        padding-left: 0.5rem;\r\n    }\r\n}\r\n\r\n@mixin button2 {\r\n    color: ab.$text;\r\n    background-color: ab.$bodybg;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    border-color: ab.$text;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n}\r\n\r\n@mixin button2Hover {\r\n    &:hover {\r\n        background-color: white;\r\n        border-color: #ccc;\r\n        color: #ccc;\r\n    }\r\n}\r\n\r\n// Unused\r\n@mixin sectionSeparate {\r\n    padding: 2em 0;\r\n    border-bottom: 2px dotted ab.$text;\r\n\r\n    &:first-of-type {\r\n        border-top: 2px dotted ab.$text;\r\n    }\r\n    &:last-of-type {\r\n        border-bottom: 0;\r\n    }\r\n}\r\n","// Typography\r\n$fontText: Georgia, \"Times New Roman\", serif;\r\n$fontSpecial: \"Lato\", Arial, Helvetica, sans-serif;\r\n$strongFontWeight: 600;\r\n$headerFontWeight: 900;\r\n\r\n// Colours\r\n$white: hsl(0, 0%, 100%);\r\n$pearl: hsl(210, 75%, 98%);\r\n$greypale: hsl(213, 25%, 80%);\r\n$greymid: hsl(213, 33%, 60%);\r\n$black: hsl(0, 0%, 15%);\r\n$blacktransp: rgba(0, 0, 0, 0.05);\r\n$siteblue: hsl(213, 65%, 50%);\r\n$sitebluedark: hsl(213, 65%, 45%);\r\n$sitebluedarkest: hsl(213, 65%, 30%);\r\n\r\n// Elements - global\r\n$bodybg: $pearl;\r\n$text: $black;\r\n$link: $sitebluedarkest;\r\n$linkHover: $black;\r\n$focusHighlight: $greymid;\r\n$treven: $blacktransp;\r\n$trodd: $white;\r\n\r\n// Elements - specific\r\n$glossarybg: $white;\r\n$glossaryBtnBorder: $greypale;\r\n\r\n$scrollbar-track: $greypale;\r\n$scrollbar-thumb: $siteblue;\r\n$scrollbar-thumb-hover: $greymid;\r\n","@use \"../abstracts\" as ab;\r\n\r\n.screenreader-hide {\r\n    @include ab.screenReaderHide;\r\n}\r\n\r\n/* Hide items but still show to screenreaders */\r\n// Items that have focus (a, button, input) can be hidden, but when they are focused (or active)\r\n// they will show up. This improves the experience for tab navigation users who will be confused\r\n// if they tab to something that doesn't print on the web page.\r\n\r\n.visually-hidden:not(:focus):not(:active) {\r\n    /* Contain text within 1px box */\r\n    height: 1px;\r\n    overflow: hidden;\r\n    width: 1px;\r\n    /* Keep the layout */\r\n    position: absolute;\r\n    /* Remove any visible trace (e.g. background color) */\r\n    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    clip-path: inset(50%); /* browsers in the future */\r\n    /* Prevent the screen reader from skipping spaces between words */\r\n    white-space: nowrap;\r\n}\r\n","@use \"../abstracts\" as ab;\r\n\r\n/* Works for webkit browsers */\r\n::-webkit-scrollbar {\r\n    width: auto;\r\n\r\n    &-track {\r\n        background-color: ab.$scrollbar-track;\r\n        margin: 0.5rem 0;\r\n    }\r\n    &-thumb {\r\n        background-color: ab.$scrollbar-thumb;\r\n    }\r\n    &-thumb:hover {\r\n        background-color: ab.$scrollbar-thumb-hover;\r\n    }\r\n    &-track,\r\n    &-thumb {\r\n        border-radius: 100vw;\r\n    }\r\n}\r\n\r\n/* Works for firefox */\r\n// Note: values in @supports (property: value value) are arbitrary colours.\r\n@supports (scrollbar-color: black grey) {\r\n    * {\r\n        scrollbar-color: ab.$scrollbar-thumb ab.$scrollbar-track;\r\n    }\r\n}\r\n","// @use \"../abstracts\" as ab;\r\n\r\n.media {\r\n    &-scroller {\r\n        --_spacer: 1rem;\r\n        margin: 0 auto;\r\n        max-width: 85rem;\r\n        display: grid;\r\n        gap: var(--_spacer);\r\n        grid-auto-flow: column;\r\n        grid-auto-columns: 85%;\r\n        overflow-x: auto;\r\n        overscroll-behavior-inline: contain;\r\n\r\n        &:focus {\r\n            outline-offset: 5px;\r\n            border-radius: 5px;\r\n        }\r\n    }\r\n\r\n    &-element {\r\n        display: grid;\r\n        grid-template-rows: min-content;\r\n        gap: var(--_spacer);\r\n\r\n        picture > img {\r\n            inline-size: 100%;\r\n            aspect-ratio: 16 / 9;\r\n            object-fit: cover;\r\n        }\r\n\r\n        p {\r\n            text-align: center;\r\n        }\r\n    }\r\n}\r\n\r\n.snaps-inline {\r\n    scroll-snap-type: inline mandatory;\r\n\r\n    & > * {\r\n        scroll-snap-align: start;\r\n    }\r\n}\r\n","@use \"../abstracts\" as ab;\r\n\r\n.article {\r\n    padding: 0 1rem 2rem 1rem;\r\n    max-width: 110.25rem;\r\n    margin-bottom: 0;\r\n\r\n    @include ab.marginCentre;\r\n\r\n    @include ab.respond-to(large) {\r\n        padding-bottom: 3rem;\r\n    }\r\n}\r\n","@use \"../abstracts\" as ab;\r\n\r\n.header {\r\n    span {\r\n        display: block;\r\n        // text-align: center;\r\n    }\r\n\r\n    img {\r\n        margin: 0;\r\n    }\r\n\r\n    p {\r\n        border-bottom: 5px solid ab.$text;\r\n        padding-bottom: 1rem;\r\n        @include ab.respond-to(large) {\r\n            padding-bottom: 2rem;\r\n            border-bottom: 8px solid ab.$text;\r\n        }\r\n    }\r\n}\r\n","@use \"../abstracts\" as ab;\r\n\r\n.page-footer {\r\n    padding-bottom: 2rem;\r\n    padding: 1rem 0 2rem 0;\r\n    border-top: 5px solid ab.$text;\r\n\r\n    @include ab.respond-to(large) {\r\n        border-top: 8px solid ab.$text;\r\n        padding: 1.5rem 0 3rem;\r\n    }\r\n}\r\n","@use \"../abstracts\" as ab;\r\n\r\n/* If width: fit-content/-moz-fit-content not supported everything will align left */\r\n@supports ((width: fit-content) or (width: -moz-fit-content)) {\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    ul,\r\n    ol,\r\n    .glossary,\r\n    .quote,\r\n    .accordion {\r\n        width: -moz-fit-content;\r\n        width: fit-content;\r\n        @include ab.marginCentre;\r\n    }\r\n    p,\r\n    img,\r\n    .slides-container {\r\n        @include ab.marginCentre;\r\n    }\r\n\r\n    h1 {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        align-items: center;\r\n    }\r\n    .container {\r\n        @include ab.respond-to(x-small) {\r\n            padding-left: 0;\r\n        }\r\n\r\n        @include ab.respond-to(large) {\r\n            padding-left: 0;\r\n        }\r\n    }\r\n\r\n    // .slides {\r\n    //     &-container {\r\n    //         @include ab.marginCentre;\r\n    //     }\r\n    // }\r\n}\r\n"],"names":[],"sourceRoot":""}